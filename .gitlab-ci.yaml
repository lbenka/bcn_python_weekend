stages:
  - build
  - test
  - release
  - deploy

variables:
  CRANE_ARGS: >
    --start-first
    --batch-size=1
    --new-image $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    --service app

image: docker:latest
  
coala:
  stage: build
  image: coala/base:latest
  script:
    - coala --non-interactive --files .

code-format:
  stage: build
  image: kiwicom/black:18.6b4
  script:
    - black --check . -l 120

mypy:
  stage: test
  services:
    - docker:dind
  script:
    - >
      docker run
      $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
      /bin/sh -c "mypy --follow-imports silent --config-file ./mypy.ini -p lb"


build:
  stage: build
  services:
    - docker:dind
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG || true
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - >
      docker build .
      --build-arg package_version=git-$CI_COMMIT_SHA
      --label build-date=`date -Iseconds`
      --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
      --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
      --cache-from $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
      --cache-from $CI_REGISTRY_IMAGE:latest
      $IMAGE_LABELS
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG

pylint:
  stage: test
  services:
    - docker:dind
  script:
    - docker run $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA pylint --reports no --persistent no . test
  allow_failure: true

unit-tests:
  stage: test
  services:
    - docker:dind
  script:
    - docker run $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA pytest --cov . test/unit
  allow_failure: true

integration-tests:
  stage: test
  services:
    - docker:dind
  script:
    - docker run $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA pytest test/integration
  allow_failure: true


release-tag:
  stage: release
  services:
    - docker:dind
  script:
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
  only:
    - tags

release-latest:
  stage: release
  services:
    - docker:dind
  script:
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:latest
  only:
    - master

deploy-dev:
  stage: deploy
  image: kiwicom/crane
  variables:
    RANCHER_URL: $TESTING_RANCHER_URL
    RANCHER_ENV_ID: $TESTING_RANCHER_ENV_ID
    RANCHER_STACK_NAME: $TESTING_RANCHER_STACK_NAME
    RANCHER_ACCESS_KEY: $TESTING_RANCHER_ACCESS_KEY
    RANCHER_SECRET_KEY: $TESTING_RANCHER_SECRET_KEY
    CRANE_SLACK_CHANNEL: some_super_slack_channel
  script:
    - crane $CRANE_ARGS
  environment:
    name: testing
    url: https://alsa-poc.kiwi.com
  when: manual
